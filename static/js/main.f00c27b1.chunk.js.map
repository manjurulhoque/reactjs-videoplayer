{"version":3,"sources":["components/styles/StyledVideoWrapper.js","components/styles/StyledVideo.js","components/Video.js","components/styles/StyledPlaylistHeader.js","components/styles/StyledJourney.js","components/PlaylistHeader.js","components/styles/StyledPlaylistItem.js","components/PlaylistItem.js","components/styles/StyledPlaylistitems.js","components/containers/PlaylistItems.js","components/hoc/withLink.js","components/styles/StyledNightmode.js","components/Nightmode.js","components/styles/StyledPlaylist.js","components/containers/Playlist.js","components/styles/StyledWbnPlayer.js","components/containers/WbnPlayer.js","components/styles/GlobalStyle.js","components/containers/App.js","serviceWorker.js","index.js"],"names":["StyledVideoWrapper","styled","div","StyledVideo","Video","active","autoplay","endCallback","progressCallback","width","height","style","position","top","playing","controls","url","video","onEnded","onProgress","StyledPlaylistHeader","StyledJourney","PlaylistHeader","total","title","num","StyledPlaylistItem","props","theme","color","played","PlaylistItem","className","duration","StyledPlaylistitems","PlaylistItemWithLink","WrappedComponent","newProps","to","pathname","id","withLink","Playlistitems","videos","map","key","StyledNightmode","NightMode","nightModeCallback","nightMode","type","checked","onChange","StyledPlaylist","Playlist","length","PlaylistItems","StyledWbnPlayer","bgcolor","border","bgcolorItem","bgcolorItemActive","bgcolorPlayed","borderPlayed","themeLight","WbnPlayer","JSON","parse","document","querySelector","value","savedState","localStorage","getItem","playlistId","useState","playlist","activeVideo","state","setState","useEffect","setItem","stringify","console","log","videoId","match","params","undefined","newActiveVideo","findIndex","prev","location","history","push","currentVideoIndex","nextVideo","e","playedSeconds","find","prevState","GlobalStyle","createGlobalStyle","App","exact","path","component","Boolean","window","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f00c27b1.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst StyledVideoWrapper = styled.div`\n  width: 100%;\n  padding-bottom: 56.25%;\n  position: relative;\n`;\n\nexport default StyledVideoWrapper;\n","import styled from \"styled-components\";\n\nconst StyledVideo = styled.div`\n  position: relative;\n  -webkit-box-flex: 2;\n  -ms-flex: 2 0 900px;\n  flex: 2 0 900px;\n\n  @media screen and (max-width: 1400px) {\n    width: 100%;\n    display: block;\n  }\n`;\n\nexport default StyledVideo;\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport StyledVideoWrapper from \"./styles/StyledVideoWrapper\";\r\nimport StyledVideo from \"./styles/StyledVideo\";\r\n\r\nconst Video = ({ active, autoplay, endCallback, progressCallback }) => (\r\n    <StyledVideo>\r\n        <StyledVideoWrapper>\r\n            <ReactPlayer\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                style={{ position: \"absolute\", top: \"0\" }}\r\n                playing={autoplay}\r\n                controls={true}\r\n                url={active.video}\r\n                onEnded={endCallback}\r\n                onProgress={progressCallback}\r\n            />\r\n        </StyledVideoWrapper>\r\n    </StyledVideo>\r\n);\r\n\r\nexport default Video;\r\n","import styled from \"styled-components\";\n\nconst StyledPlaylistHeader = styled.div`\n  background: #696969;\n  font-family: \"Hind\", sans-serif;\n  font-weight: 800;\n  font-size: 1.6em;\n  color: #fff;\n  padding: 0 20px;\n  margin: 0 0 20px 0;\n  min-height: 80px;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport default StyledPlaylistHeader;\n","import styled from \"styled-components\";\n\nconst StyledJourney = styled.div`\n    background: #565656;\n    font-size: 0.8em;\n    padding: 2px 5px;\n    height: 20px;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    border-radius: 5px;\n`;\n\nexport default StyledJourney;\n","import React from \"react\";\r\nimport StyledPlaylistHeader from \"./styles/StyledPlaylistHeader\";\r\nimport StyledJourney from \"./styles/StyledJourney\";\r\n\r\nconst PlaylistHeader = ({ active, total }) => (\r\n    <StyledPlaylistHeader>\r\n        <p>{active.title}</p>\r\n        <StyledJourney>\r\n            {active.num} / {total}\r\n        </StyledJourney>\r\n    </StyledPlaylistHeader>\r\n);\r\n\r\nexport default PlaylistHeader;\r\n","import styled from \"styled-components\";\n\nconst StyledPlaylistItem = styled.div`\n  font-family: \"Hind\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background: none;\n  border: ${props => (props.active ? \"2px dotted #696969\" : \"none\")};\n  font-size: 1.6em;\n  color: ${props => props.theme.color};\n  min-height: 50px;\n  padding: 10px 20px;\n  margin: 0 0 10px 0;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: ${props => (props.active ? \"5px\" : \"0\")};\n  cursor: pointer;\n  position: relative;\n\n  ::before {\n    display: ${props => (props.active || !props.played ? \"none\" : \"block\")};\n    content: \"\";\n    width: 10px;\n    min-height: 10px;\n    background: #409f4e;\n    border-radius: 50px;\n    position: absolute;\n    left: 0;\n    top: 19px;\n  }\n\n  .wbn-player__video-nr {\n    flex-grow: 1; /* default 0 */\n    max-width: 30px;\n    padding-right: 20px;\n    border-right: 2px solid #565656;\n  }\n\n  .wbn-player__video-name,\n  .wbn-player__video-name a {\n    flex-grow: 10; /* default 0 */\n    padding: 0 0 0 10px;\n    color: ${props => props.theme.color};\n    text-align: left;\n    text-decoration: none;\n    display: block;\n  }\n\n  .wbn-player__video-time {\n    background: #565656;\n    min-width: 45px;\n    color: #fff;\n    font-size: 0.8em;\n    padding: 0px 5px;\n    height: 20px;\n    text-align: center;\n    border-radius: 5px;\n    margin: 0 0 0 5px;\n  }\n\n  .wbn-player__video-download {\n    flex-grow: 1; /* default 0 */\n    color: ${props => (props.played ? \"#fff\" : props.theme.color)};\n    margin: 0 0 0 20px;\n    max-width: 30px;\n    padding: 0 20px;\n    border-left: 2px solid #565656;\n    font-family: \"fontello\";\n    font-style: normal;\n    font-weight: normal;\n  }\n\n  .wbn-player__video-download a {\n    color: ${props =>\n      props.played && !props.active ? \"#fff\" : props.theme.color};\n  }\n\n  .active {\n    opacity: 0.1;\n  }\n`;\n\nexport default StyledPlaylistItem;\n","import React from \"react\";\nimport StyledPlaylistItem from \"./styles/StyledPlaylistItem\";\n\nconst PlaylistItem = ({ video, active, played }) => (\n    <StyledPlaylistItem active={active} played={played}>\n        <div className=\"wbn-player__video-nr\">{video.num}</div>\n        <div className=\"wbn-player__video-name\">{video.title}</div>\n        <div className=\"wbn-player__video-time\">{video.duration}</div>\n    </StyledPlaylistItem>\n);\n\nexport default PlaylistItem;\n","import styled from \"styled-components\";\n\nconst StyledPlaylistitems = styled.div`\n  padding: 0 20px 0 20px;\n  overflow-y: auto;\n  height: 28vw;\n  max-height: 500px;\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: transparent;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n    border-radius: 2px;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nexport default StyledPlaylistitems;\n","import React from \"react\";\r\nimport PlaylistItem from \"../PlaylistItem\";\r\nimport StyledPlaylistitems from \"../styles/StyledPlaylistitems\";\r\nimport withLink from \"./../hoc/withLink\";\r\n\r\nconst PlaylistItemWithLink = withLink(PlaylistItem);\r\n\r\nconst Playlistitems = ({ videos, active }) => (\r\n    <StyledPlaylistitems>\r\n        {videos.map(video => (\r\n            <PlaylistItemWithLink\r\n                key={video.id}\r\n                video={video}\r\n                active={video.id === active.id ? true : false}\r\n                played={video.played}\r\n            />\r\n        ))}\r\n    </StyledPlaylistitems>\r\n);\r\n\r\nexport default Playlistitems;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst withLink = WrappedComponent => props => {\r\n    const newProps = {\r\n        ...props,\r\n        video: {\r\n            ...props.video,\r\n            title: (\r\n                <Link to={{ pathname: `/${props.video.id}`, autoplay: true }}>\r\n                    {props.video.title}\r\n                </Link>\r\n            )\r\n        }\r\n    };\r\n\r\n    return <WrappedComponent {...newProps} />;\r\n};\r\n\r\nexport default withLink;\r\n","import styled from \"styled-components\";\n\nconst StyledNightmode = styled.div`\n  font-family: \"Hind\", sans-serif;\n  font-weight: 800;\n  font-size: 1.6em;\n  color: ${props => props.theme.color};\n  padding: 0;\n  margin: 20px;\n\n  /* CSS taken from https://www.w3schools.com/howto/howto_css_switch.asp */\n  /* The switch - the box around the slider */\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: 40px;\n    height: 24px;\n  }\n\n  /* Hide default HTML checkbox */\n  .switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  /* The slider */\n  .slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n  }\n\n  .slider:before {\n    position: absolute;\n    content: \"\";\n    height: 16px;\n    width: 16px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n  }\n\n  input:checked + .slider {\n    background-color: #3d5138;\n  }\n\n  input:focus + .slider {\n    box-shadow: 0 0 1px #2196f3;\n  }\n\n  input:checked + .slider:before {\n    -webkit-transform: translateX(16px);\n    -ms-transform: translateX(16px);\n    transform: translateX(16px);\n  }\n\n  /* Rounded sliders */\n  .slider.round {\n    border-radius: 30px;\n  }\n\n  .slider.round:before {\n    border-radius: 50%;\n  }\n`;\n\nexport default StyledNightmode;\n","import React from \"react\";\r\nimport StyledNightmode from \"./styles/StyledNightmode\";\r\n\r\nconst NightMode = ({ nightModeCallback, nightMode }) => (\r\n    <StyledNightmode>\r\n        <span>Nightmode: </span>\r\n        <label className=\"switch\">\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={nightMode}\r\n                onChange={nightModeCallback}\r\n            />\r\n            <span className=\"slider round\" />\r\n        </label>\r\n    </StyledNightmode>\r\n);\r\n\r\nexport default NightMode;\r\n","import styled from \"styled-components\";\n\nconst StyledPlaylist = styled.div`\n    -webkit-box-flex: 1;\n    -ms-flex: 1 1 450px;\n    flex: 1 1 450px;\n    overflow: hidden;\n    color: white;\n    /* height: 0;\n  padding-top:50px;\n  padding-bottom: 36%; */\n\n    @media screen and (max-width: 1400px) {\n        width: 100%;\n        display: block;\n    }\n`;\n\nexport default StyledPlaylist;\n","import React from \"react\";\r\nimport PlaylistHeader from \"../PlaylistHeader\";\r\nimport PlaylistItems from \"../containers/PlaylistItems\";\r\nimport NightMode from \"../Nightmode\";\r\nimport StyledPlaylist from \"../styles/StyledPlaylist\";\r\n\r\nconst Playlist = ({ videos, active, nightModeCallback, nightMode }) => (\r\n    <StyledPlaylist>\r\n        <NightMode\r\n            nightModeCallback={nightModeCallback}\r\n            nightMode={nightMode}\r\n        />\r\n        <PlaylistHeader active={active} total={videos.length} />\r\n        <PlaylistItems videos={videos} active={active} />\r\n    </StyledPlaylist>\r\n);\r\n\r\nexport default Playlist;\r\n","import styled from \"styled-components\";\n\nconst StyledWbnPlayer = styled.div`\n    background: ${props => props.theme.bgcolor}; /* #353535; */\n    border: ${props => props.theme.border};\n    max-width: 1800px;\n    margin: 0 auto;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    flex-direction: row;\n    max-height: 863px;\n    transition: all 0.5s ease;\n\n    @media screen and (max-width: 1400px) {\n        display: block;\n        max-height: 10000px;\n    }\n`;\n\nexport default StyledWbnPlayer;\n","import React, { useState, useEffect } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport Video from \"../Video\";\r\nimport Playlist from \"../containers/Playlist\";\r\nimport StyledWbnPlayer from \"../styles/StyledWbnPlayer\";\r\n\r\nconst theme = {\r\n    bgcolor: \"#353535\",\r\n    bgcolorItem: \"#414141\",\r\n    bgcolorItemActive: \"#405c63\",\r\n    bgcolorPlayed: \"#526d4e\",\r\n    border: \"none\",\r\n    borderPlayed: \"none\",\r\n    color: \"#fff\"\r\n};\r\n\r\nconst themeLight = {\r\n    bgcolor: \"#fff\",\r\n    bgcolorItem: \"#fff\",\r\n    bgcolorItemActive: \"#80a7b1\",\r\n    bgcolorPlayed: \"#7d9979\",\r\n    border: \"1px solid #353535\",\r\n    borderPlayed: \"none\",\r\n    color: \"#353535\"\r\n};\r\n\r\nconst WbnPlayer = props => {\r\n    const videos = JSON.parse(document.querySelector('[name=\"videos\"]').value);\r\n    const savedState = JSON.parse(localStorage.getItem(`${videos.playlistId}`));\r\n\r\n    const [state, setState] = useState({\r\n        videos: savedState ? savedState.videos : videos.playlist,\r\n        activeVideo: savedState ? savedState.activeVideo : videos.playlist[0],\r\n        nightMode: savedState ? savedState.nightMode : true,\r\n        playlistId: savedState ? savedState.playlistId : videos.playlistId,\r\n        autoplay: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\r\n            `${state.playlistId}`,\r\n            JSON.stringify({ ...state })\r\n        );\r\n    }, [state]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"test\");\r\n        const videoId = props.match.params.activeVideo;\r\n        if (videoId !== undefined) {\r\n            const newActiveVideo = state.videos.findIndex(\r\n                video => video.id === videoId\r\n            );\r\n            setState(prev => ({\r\n                ...prev,\r\n                activeVideo: prev.videos[newActiveVideo],\r\n                autoplay: props.location.autoplay\r\n            }));\r\n        } else {\r\n            props.history.push({\r\n                pathname: `/${state.activeVideo.id}`,\r\n                autoplay: false\r\n            });\r\n        }\r\n    }, [\r\n        props.history,\r\n        props.location.autoplay,\r\n        props.match.params.activeVideo,\r\n        state.activeVideo.id,\r\n        state.videos\r\n    ]);\r\n\r\n    const nightModeCallback = () => {\r\n        setState({ ...state, nightMode: !state.nightMode });\r\n    };\r\n\r\n    const endCallback = () => {\r\n        const videoId = props.match.params.activeVideo;\r\n        const currentVideoIndex = state.videos.findIndex(\r\n            video => video.id === videoId\r\n        );\r\n\r\n        const nextVideo =\r\n            currentVideoIndex === state.videos.length - 1\r\n                ? 0\r\n                : currentVideoIndex + 1;\r\n\r\n        props.history.push({\r\n            pathname: `${state.videos[nextVideo].id}`,\r\n            autoplay: false\r\n        });\r\n    };\r\n\r\n    const progressCallback = e => {\r\n        if (e.playedSeconds > 10 && e.playedSeconds < 11) {\r\n            const videos = [...state.videos];\r\n            const playedVideo = videos.find(\r\n                video => video.id === state.activeVideo.id\r\n            );\r\n            playedVideo.played = true;\r\n\r\n            setState(prevState => ({ ...prevState, videos }));\r\n\r\n            // setState({\r\n            //   ...state,\r\n            //   videos: state.videos.map( element => {\r\n            //     return element.id === state.activeVideo.id\r\n            //     ? { ...element, played: true }\r\n            //     : element;\r\n            //   })\r\n            // });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={state.nightMode ? theme : themeLight}>\r\n            {state.videos !== null ? (\r\n                <StyledWbnPlayer>\r\n                    <Video\r\n                        active={state.activeVideo}\r\n                        autoplay={state.autoplay}\r\n                        endCallback={endCallback}\r\n                        progressCallback={progressCallback}\r\n                    />\r\n                    <Playlist\r\n                        videos={state.videos}\r\n                        active={state.activeVideo}\r\n                        nightModeCallback={nightModeCallback}\r\n                        nightMode={state.nightMode}\r\n                    />\r\n                </StyledWbnPlayer>\r\n            ) : null}\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default WbnPlayer;\r\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-size: 16px;\n        font-family: 'Hind', sans-serif;\n    }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport WbnPlayer from \"./WbnPlayer\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport GlobalStyle from \"./../styles/GlobalStyle\";\n\nconst App = () => (\n    <BrowserRouter>\n        <>\n            <Switch>\n                <Route exact path=\"/\" component={WbnPlayer} />\n                <Route exact path=\"/:activeVideo\" component={WbnPlayer} />\n            </Switch>\n            <GlobalStyle />\n        </>\n    </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}